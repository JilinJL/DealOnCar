{"version":3,"file":"pages/shop/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAeA;AAAA;AAAA;AACA;AAfA;AACA;AACA;AAAA;AACA;;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAEA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;AACA;AAEA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AA+BA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;;AAEA;AAAA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAyBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/FA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AA8DA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC5IA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAAA;;AAQA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAgBA;AACA;AAAA;AAAA;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AApCA;AACA;AACA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AACA;AACA;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA;AACA;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://DealOnCar/._src_pages_shop_index.jsx","webpack://DealOnCar/._src_pages_shop_gooditem_index.jsx","webpack://DealOnCar/._src_pages_shop_goodslist_index.jsx","webpack://DealOnCar/./src/pages/shop/index.jsx?b003","webpack://DealOnCar/._src_pages_shop_shopcart_index.jsx","webpack://DealOnCar/._src_pages_shop_shopcartitem_index.jsx","webpack://DealOnCar/._src_pages_shop_shopcartlist_index.jsx","webpack://DealOnCar/._src_utils_throttle.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_arrayLikeToArray.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_arrayWithHoles.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_arrayWithoutHoles.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_iterableToArray.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_iterableToArrayLimit.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_nonIterableRest.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_nonIterableSpread.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_slicedToArray.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_toConsumableArray.js","webpack://DealOnCar/._node_modules_@babel_runtime_helpers_esm_unsupportedIterableToArray.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Taro from '@tarojs/taro'\nimport { View, Text } from '@tarojs/components'\nimport { AtButton, AtNoticebar } from 'taro-ui'\nimport GoodsList from '../shop/goodslist'\nimport ShopCart from './shopcart'\n\nimport './index.less'\n\nexport default class Shop extends Component {\n  constructor(props) {\n    super(props)\n    this.state = ({\n      itemToCart: {}\n    })\n  }\n\n\n  //下拉刷新\n  onPullDownRefresh() {\n    this.forceUpdate()\n    Taro.stopPullDownRefresh()\n  }\n\n  // 拿到要加入购物车的item\n  saveItemToCart=(item)=>{\n    this.setState({itemToCart: item})\n  }\n\n  render() {\n    return (\n      <View className='index'>\n\n        <AtNoticebar marquee>\n          当前设备ID: 20230221 测试版本不代表最终效果\n        </AtNoticebar>\n\n        <GoodsList saveItemToCart={this.saveItemToCart} addToCart={this.addToCart} />\n\n        <ShopCart itemToCart={this.state.itemToCart} className='shop-cart' />\n\n      </View>\n    )\n  }\n}\n","import { View, Image, Text } from '@tarojs/components'\r\nimport { AtIcon } from 'taro-ui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './index.less'\r\n\r\nexport default function GoodItem(props) {\r\n\r\n  const [obj, setObj] = useState({ id: 0, name: null, price: 0, imgSrc: '' })\r\n\r\n\r\n  // 获取具体信息\r\n  const getItemInfo = () => {\r\n    setObj({\r\n      id: props.id,\r\n      name: props.name,\r\n      price: props.price,\r\n      imgSrc: props.imgSrc\r\n    })\r\n  }\r\n\r\n  // 商品详情\r\n  const gotoDetails=(id)=>{\r\n    console.log(obj);\r\n\r\n  }\r\n\r\n  //添加到购物车\r\n  const addToCart = (item)=>{\r\n    //移交给父组件\r\n    props.saveItemToCart(item)\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    getItemInfo();\r\n  })\r\n\r\n  return (\r\n    <View className=\"good-item\">\r\n      <Image onClick={()=>gotoDetails(obj.id)} mode='scaleToFill' className=\"good-img\" alt='加载失败..' src={obj.imgSrc}></Image>\r\n      <Text>{obj.name}</Text>\r\n      <View className=\"price\">\r\n        <Text>￥ {obj.price}</Text>\r\n        <Text className=\"good-surplus\">剩余:{obj.surplus}</Text>\r\n        <View onClick={()=>addToCart(obj)} className='at-icon at-icon-shopping-cart' size=\"20\" color='#666'></View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","// 引入 Swiper, SwiperItem 组件\r\nimport Taro from '@tarojs/taro'\r\nimport { Component } from 'react'\r\nimport { Image, View, Text } from '@tarojs/components'\r\nimport { AtList, AtListItem, AtDivider } from 'taro-ui'\r\n\r\n\r\nimport GoodItem from '../gooditem'\r\nimport './index.less'\r\n\r\nexport default class GoodsList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            goods: [],  //存储商品\r\n            \r\n        };\r\n    }\r\n\r\n    //下拉刷新\r\n    onPullDownRefresh() {\r\n        console.log(123);\r\n        \r\n    }\r\n\r\n\r\n    //处理请求的数据\r\n    handleRequest(dataArr) {\r\n        console.log(dataArr)\r\n    }\r\n\r\n    //获取商品列表\r\n    goodsRequest = () => {\r\n\r\n        // 本地测试请求\r\n        Taro.request({\r\n            method: 'get',\r\n            url: 'http://localhost:3000/goodsData',\r\n            success: (res) => {\r\n                this.setState({ goods: [...res.data] })\r\n                console.log(res.data)\r\n            }\r\n        })\r\n\r\n        // Taro.request({\r\n        //     method: 'POST',\r\n        //     url: 'http://192.168.199.238:7676/api/passenger/product/list',\r\n        //     data: {\r\n        //         \"currentPage\" : 0,\r\n        //         \"pageSize\" : 100,\r\n        //         \"queryString\" : null,\r\n        //         \"vehicleId\" : 1\r\n        //     },\r\n        //     success: (res) => {\r\n        //         this.setState({ goods: [...res.data.result] })\r\n        //     }\r\n        // })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.goodsRequest()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.goodsRequest.abort();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View className='goods-list'>\r\n                {\r\n                    this.state.goods.map((good, index) => {\r\n                        return (\r\n                            <GoodItem\r\n                                id={good.id}\r\n                                imgSrc={good.image}    //物品图片\r\n                                name={good.storeName}    //物品名\r\n                                price={good.price}\r\n                                key={good.id}\r\n                                surplus={good.surplus}\r\n\r\n                                // addToCart={() => this.addToShopCart(good.id,good.image,good.storeName, good.price, 1)}\r\n                                addToCart={this.props.addToCart}\r\n                                saveItemToCart={this.props.saveItemToCart}\r\n                            ></GoodItem>\r\n                        )\r\n                    })\r\n                }\r\n                <View style={{ position: 'relative', left: '-3rem' }}>没有更多了...</View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"购物\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/shop/index', {root:{cn:[]}}, config || {}))\n\n\n","import { View, Image, Text } from '@tarojs/components'\r\nimport React, { Component } from 'react'\r\nimport Taro from '@tarojs/taro'\r\nimport { AtBadge, AtFloatLayout } from 'taro-ui'\r\nimport { throttle } from '../../../utils/throttle'\r\nimport ShopCartList from '../shopcartlist'\r\nimport img from '../../../images/icon/shop-cart.png'\r\nimport './index.less'\r\n\r\nexport default class ShopCart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            number: 0,\r\n            goods: [],\r\n            noRepeatGoods: [],\r\n            totalPrice: 0,\r\n            showCart: false,\r\n        })\r\n    }\r\n\r\n    //更新数量 \r\n    componentDidUpdate(prevProps, prevState) {\r\n        //通过判断prevProps和当前props可以避免陷入update死循环\r\n        if (prevProps.itemToCart !== this.props.itemToCart) {\r\n            this.setState({ goods: [...this.state.goods, this.props.itemToCart] }, () => {\r\n                this.setState({ noRepeatGoods: this.handleGoods(this.state.goods) }, () => {\r\n                    this.computeTotalPrice(this.child.props.goodsList)\r\n                })\r\n                this.setState({ number: this.state.goods.length })\r\n            });\r\n        }\r\n    }\r\n\r\n    // 处理小红点显示数\r\n    handleDot = (goodsList) => {\r\n        let count = goodsList.reduce((total, item) => {\r\n            return total + item.quantity\r\n        }, 0)\r\n        this.setState({ number: count })\r\n    }\r\n\r\n    //数组去重同一个id的商品合并 计算quantity\r\n    handleGoods = (list) => {\r\n\r\n        // 先记录了每个id出现次数\r\n        let itemCount = list.reduce((pre, cur) => {\r\n            pre[cur.id] = (pre[cur.id] + 1) || 1\r\n            return pre;\r\n        }, {})\r\n\r\n        //for循环写法\r\n        // for (let i = 0; i < list.length;i++){\r\n        // let item = list[i].id \r\n        // newList[item] = (newList[item] + 1) || 1\r\n        // }\r\n\r\n        // 给数组去重\r\n        let hash = {}\r\n        let noRepeatList = list.reduce((item, next) => {\r\n            hash[next.id] ? '' : (hash[next.id] = true, item.push(next))\r\n            return item\r\n        }, [])\r\n\r\n        //重组数组\r\n        noRepeatList.map((item) => {\r\n            item.quantity = itemCount[item.id]\r\n            return item\r\n        })\r\n\r\n        return noRepeatList\r\n    }\r\n\r\n    //计算总价\r\n    computeTotalPrice = (goodsList) => {\r\n        let totalPrice = goodsList.reduce((total, item) => {\r\n            return total + item.quantity * item.price\r\n        }, 0)\r\n        this.setState({ totalPrice: totalPrice })\r\n        return totalPrice;\r\n    }\r\n\r\n    //弹出购物车列表\r\n    showCart = () => {\r\n        let flag = !this.state.showCart\r\n        this.setState({ showCart: flag })\r\n    }\r\n\r\n    //处理添加和减少 (添加节流)\r\n    throttleUpdate = throttle(this.handleGoodsUpdate, 500)\r\n\r\n    handleGoodsUpdate(id, type) {\r\n\r\n    }\r\n\r\n\r\n    //去结算\r\n    toPay = () => {\r\n        Taro.setStorage({\r\n            key: 'shopCart',\r\n            data: {\r\n                total: this.state.totalPrice\r\n            }\r\n        })\r\n        Taro.navigateTo({\r\n            url: '../pay/index?totalPrice=123'\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <View className=\"shop-cart\">\r\n                    <View className=\"shop-cart-icon\">\r\n                        {this.state.number ? <AtBadge className=\"badge\" value={this.state.number} />\r\n                            : null}\r\n                        <Image onClick={this.showCart} src={img}></Image>\r\n\r\n                    </View>\r\n                    <View className=\"shop-cart-total\">{this.state.totalPrice}</View>\r\n                    <View className=\"shop-cart-toPay\" onClick={this.toPay}>去结算</View>\r\n\r\n                </View>\r\n                {/*购物车弹出框*/}\r\n                <AtFloatLayout\r\n                    isOpened={this.state.showCart}\r\n                    scrollY\r\n                    title=\"购物车\"\r\n                    onClose={this.showCart}\r\n                >\r\n                    <ShopCartList\r\n                        handleDot={this.handleDot}\r\n                        ref={e => this.child = e}\r\n                        computeTotalPrice={this.computeTotalPrice}\r\n                        goodsList={this.state.noRepeatGoods}\r\n                        total={this.state.totalPrice} />\r\n\r\n                </AtFloatLayout>\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n","import { View, Image, Text } from '@tarojs/components'\r\nimport { AtButton } from 'taro-ui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './index.less'\r\n\r\nexport default function ShopCartItem(props) {\r\n\r\n\r\n  const [isShow,setIsShow] = useState(true)\r\n  //购物车内物品\r\n  const [item,setItem] = useState({\r\n    id: props.good.id,\r\n    imgSrc: props.good.imgSrc,\r\n    name: props.good.name,\r\n    price: props.good.price,\r\n    quantity: props.good.quantity\r\n  })\r\n\r\n  //绑定数量处理方法\r\n  const handleQuantity = props.handleQuantity\r\n\r\n  return (\r\n    <>\r\n    {\r\n      isShow?    \r\n      (<View className=\"shop-cart-item\">\r\n      <Image className=\"shop-cart-item-img\" src={item.imgSrc}/>\r\n      <Text className=\"shop-cart-item-name\">{item.name}</Text>\r\n      <Text className=\"shop-cart-item-price\">￥{item.price}</Text>\r\n      <View className=\"shop-cart-item-control\">\r\n        <AtButton\r\n          className=\"shop-cart-item-btn sub\"\r\n          circle\r\n          size='small'\r\n          type='secondary'\r\n          onClick={()=>{handleQuantity(item.id,-1)}}\r\n        >-</AtButton>\r\n        <View>{props.good.quantity}</View>\r\n        <AtButton\r\n          className=\"shop-cart-item-btn add\"\r\n          circle\r\n          size='small'\r\n          type='secondary'\r\n          onClick={()=>{handleQuantity(item.id,1)}}\r\n        >+</AtButton>\r\n      </View>\r\n    </View>)\r\n    :\r\n    null\r\n    }\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n","import { View,Text } from '@tarojs/components'\r\nimport React, { Component } from 'react'\r\nimport ShopCartItem from '../shopcartitem'\r\nimport './index.less'\r\n\r\nexport default class ShopCartList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = ({\r\n            items: [],\r\n        })\r\n    }\r\n    \r\n    //拿到传入物品 渲染去重后的购物车\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps.goodsList!==this.props.goodsList){\r\n            this.setState({items: this.props.goodsList},()=>{\r\n            })\r\n        }\r\n    }\r\n\r\n    //处理某商品数量\r\n    handleQuantity=(id,step)=>{\r\n      const cloneItems = [...this.state.items]\r\n      cloneItems.find(curr=>curr.id === id).quantity += step\r\n\r\n      //判断是否删除\r\n      this.handleDelete(cloneItems)\r\n      \r\n      this.setState({items:cloneItems},()=>this.props.computeTotalPrice(this.state.items))\r\n      \r\n      //处理小红点\r\n      this.props.handleDot(this.state.items)\r\n    }\r\n\r\n    //quantity为0 删除该商品\r\n    handleDelete=(cloneItems)=>{\r\n      cloneItems.map((item)=>{\r\n        if(item.quantity <= 0){\r\n          //先找到其索引 然后从数组中移除\r\n            let index = this.state.items.findIndex((one)=>one.id===item.id)\r\n            cloneItems.splice(index,1)\r\n        }\r\n      })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <View className=\"shop-cart-list\">\r\n        {this.state.items.map((item)=>{\r\n            return (\r\n                <ShopCartItem\r\n                good={item}\r\n                key={item.id}\r\n                handleQuantity={this.handleQuantity}\r\n                ></ShopCartItem>\r\n            )\r\n        })}\r\n        <Text>总价:{this.props.total}元</Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n","// 节流 第一次最后一次都触发\r\nconst throttle=(fn,delay)=>{\r\n    let timer = null;\r\n    let startTime = new Date();\r\n    return function(){\r\n        let nowTime = new Date();\r\n        let remainingTime =delay-(nowTime - startTime); // 计算上次执行到现在，还剩多少时间执行下一次\r\n        \r\n        let that = this;\r\n        let _args = arguments;\r\n        clearTimeout(timer)\r\n        if(remainingTime <= 0){         // 如果剩余时间已达  执行并重设开始时间\r\n            fn.apply(that, _args);\r\n            startTime = new Date();\r\n        }else{  \r\n            // 已经是最后一次执行   剩余时间到达后执行最后一次\r\n            timer = setTimeout(fn,remainingTime)\r\n        }\r\n    }\r\n}\r\n\r\nexport {throttle}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":[],"sourceRoot":""}